name: Create Release and Publish on NPM

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  create-release-publish-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set env
        run: echo "GIT_TAG=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $GIT_TAG
          echo ${{ env.GIT_TAG }}

      - name: Generate App Version Name
        run: echo ${{ env.GIT_TAG }}

      - name: Extract Tag Name
        id: extract_tag_name
        run: echo "::set-output name=tag_name::${GITHUB_REF#refs/tags/}"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run lint && npm run build

      - name: Publish on NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release
        id: create_release
        run: |
          curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/releases \
            --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'Content-Type: application/json' \
            --data '{
              "tag_name": "${{ env.GIT_TAG  }}",
              "name": "${{ env.GIT_TAG  }}",
              "body": "This is the release description.",
              "draft": false,
              "prerelease": false
            }'

      - name: Release
        id: create_release_code
        uses: actions/create-release@v1
        with:
          release_name: Release ${{ env.GIT_TAG }}
          tag_name: ${{ env.GIT_TAG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
